@model HaarlemFestival.Model.PagePlusActivities
@section AddToHead{
    <link href=@Url.Content("~/Content/Admin.css") rel="stylesheet" type="text/css" />

}
@section AddToScripts{
    <script src=@Url.Content("~/Scripts/Admin.js")></script>
}
@{
    ViewBag.Title = "Jazz management";
}
@RenderPage("AdminNav.cshtml")
<main class="col-sm-9 ml-sm-auto col-md-10 adminMain">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Page.Name)
        @Html.HiddenFor(model => model.Page.Title)
        <section class="adminSection col-md-10">
            <div class="form-group">
                @Html.LabelFor(Model => Model.Page.PageDescriptions[0].Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.Page.PageDescriptions[0].Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(Model => Model.Page.PageDescriptions[0].Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(modelItem => Model.Page.PageDescriptions[0].DescriptionText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(modelItem => Model.Page.PageDescriptions[0].DescriptionText, 5, 40, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(modelItem => Model.Page.PageDescriptions[0].DescriptionText, "", new { @class = "text-danger" })
                </div>
            </div>
        </section>
        <section class="adminSection col-md-10">
            <div class="schedule">
                <div class="timeline">
                    <ul>
                        @for (int h = 15; h < 23; h++)
                        {
                                <li><span>@Html.Raw(h + ":00")</span></li>
                         }
                    </ul>
                </div>

                <div class="events">
                    <ul>
                        <li class="events-group">
                            <div class="top-info"><span>Thursday</span></div>

                            <ul>

                                @for (int i = 0; i < Model.Activities.Count; i++)
                                {
                                    for (int j = 0; j < Model.Activities[i].Timeslots.Count; j++)
                                    {
                                        if (Model.Activities[i].Timeslots[j].StartTime.DayOfWeek == DayOfWeek.Thursday)
                                        {
                                            <li class="single-event" id="cal-@Model.Activities[i].Id-@Model.Activities[i].Timeslots[j].StartTime" data-start="@Model.Activities[i].Timeslots[j].StartTime.TimeOfDay" data-end="@Model.Activities[i].Timeslots[j].EndTime.TimeOfDay" data-content="event-abs-circuit" data-event="event-@i-@j">
                                                <a href="#@Model.Activities[i].Id">
                                                    <span class="event-date">@Model.Activities[i].Timeslots[j].StartTime.ToString("HH:mm") - @Model.Activities[i].Timeslots[j].EndTime.ToString("HH:mm")</span>
                                                    <em class="event-name">@Model.Activities[i].Name</em>
                                                </a>
                                            </li>
                                        }
                                    }
                                }
                                <!-- other events here -->
                            </ul>
                        </li>

                        <li class="events-group">
                            <div class="top-info"><span>Friday</span></div>

                            <ul>
                                @for (int i = 0; i < Model.Activities.Count; i++)
                                {
                                    for (int j = 0; j < Model.Activities[i].Timeslots.Count; j++)
                                    {
                                        if (Model.Activities[i].Timeslots[j].StartTime.DayOfWeek == DayOfWeek.Friday)
                                        {
                                            <li class="single-event" id="cal-@Model.Activities[i].Id-@Model.Activities[i].Timeslots[j].StartTime" data-start="@Model.Activities[i].Timeslots[j].StartTime.TimeOfDay" data-end="@Model.Activities[i].Timeslots[j].EndTime.TimeOfDay" data-content="event-abs-circuit" data-event="event-@i-@j">
                                                <a href="#@Model.Activities[i].Id">
                                                    <span class="event-date">@Model.Activities[i].Timeslots[j].StartTime.ToString("HH:mm") - @Model.Activities[i].Timeslots[j].EndTime.ToString("HH:mm")</span>
                                                    <em class="event-name">@Model.Activities[i].Name</em>
                                                </a>
                                            </li>
                                        }
                                    }
                                }
                            </ul>
                        </li>

                        <li class="events-group">
                            <div class="top-info"><span>Saturday</span></div>

                            <ul>
                                @for (int i = 0; i < Model.Activities.Count; i++)
                                {
                                    for (int j = 0; j < Model.Activities[i].Timeslots.Count; j++)
                                    {
                                        if (Model.Activities[i].Timeslots[j].StartTime.DayOfWeek == DayOfWeek.Saturday)
                                        {
                                            <li class="single-event" id="cal-@Model.Activities[i].Id-@Model.Activities[i].Timeslots[j].StartTime" data-start="@Model.Activities[i].Timeslots[j].StartTime.TimeOfDay" data-end="@Model.Activities[i].Timeslots[j].EndTime.TimeOfDay" data-content="event-abs-circuit" data-event="event-@i-@j">
                                                <a href="#@Model.Activities[i].Id">
                                                    <span class="event-date">@Model.Activities[i].Timeslots[j].StartTime.ToString("HH:mm") - @Model.Activities[i].Timeslots[j].EndTime.ToString("HH:mm")</span>
                                                    <em class="event-name">@Model.Activities[i].Name</em>
                                                </a>
                                            </li>
                                        }
                                    }
                                }
                            </ul>
                        </li>

                        <li class="events-group">
                            <div class="top-info"><span>Sunday</span></div>

                            <ul>
                                @for (int i = 0; i < Model.Activities.Count; i++)
                                {
                                    for (int j = 0; j < Model.Activities[i].Timeslots.Count; j++)
                                    {
                                        if (Model.Activities[i].Timeslots[j].StartTime.DayOfWeek == DayOfWeek.Sunday)
                                        {
                                            <li class="single-event" id="cal-@Model.Activities[i].Id-@Model.Activities[i].Timeslots[j].StartTime" data-start="@Model.Activities[i].Timeslots[j].StartTime.TimeOfDay" data-end="@Model.Activities[i].Timeslots[j].EndTime.TimeOfDay" data-content="event-abs-circuit" data-event="event-@i-@j">
                                                <a href="#@Model.Activities[i].Id">
                                                    <span class="event-date">@Model.Activities[i].Timeslots[j].StartTime.ToString("HH:mm") - @Model.Activities[i].Timeslots[j].EndTime.ToString("HH:mm")</span>
                                                    <em class="event-name">@Model.Activities[i].Name</em>
                                                </a>
                                            </li>
                                        }
                                    }
                                }
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>

            @for(int i=0;i< Model.Activities.Count;i++)
            {
                <div id="edit-@Model.Activities[i].Id" class="jazz-edit">
                    @Html.HiddenFor(model => Model.Activities[i].Id)
                    @Html.HiddenFor(model => Model.Activities[i].Location_Id)
                    @Html.HiddenFor(model => Model.Activities[i].Type)

                    <section col-md-6>
                        <div class="form-group">
                            @Html.LabelFor(modelItem => Model.Activities[i].Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="">
                                @Html.EditorFor(modelItem => Model.Activities[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(modelItem => Model.Activities[i].Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @for (int j = 0; j < Model.Activities[i].Timeslots.Count; j++)
                        {
                            @Html.HiddenFor(model => Model.Activities[i].Timeslots[j].Activity_Id)
                            @Html.HiddenFor(model => Model.Activities[i].Timeslots[j].OccupiedSeats)
                            <div class="form-group">
                                @Html.LabelFor(modelItem => Model.Activities[i].Timeslots[j].StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="">
                                    @Html.EditorFor(modelItem => Model.Activities[i].Timeslots[j].StartTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                    @Html.ValidationMessageFor(modelItem => Model.Activities[i].Timeslots[j].StartTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(modelItem => Model.Activities[i].Timeslots[j].EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="">
                                    @Html.EditorFor(modelItem => Model.Activities[i].Timeslots[j].EndTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                    @Html.ValidationMessageFor(modelItem => Model.Activities[i].Timeslots[j].EndTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(modelItem => Model.Activities[i].Timeslots[j].TotalSeats, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="">
                                    @Html.EditorFor(modelItem => Model.Activities[i].Timeslots[j].TotalSeats, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(modelItem => Model.Activities[i].Timeslots[j].TotalSeats, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            for (int k = 0; k < Model.Activities[i].Timeslots[j].Tickets.Count; k++)
                            {
                                @Html.HiddenFor(model => Model.Activities[i].Timeslots[j].Tickets[k].TimeSlot_Activity_Id)
                                @Html.HiddenFor(model => Model.Activities[i].Timeslots[j].Tickets[k].TimeSlot_StartTime)
                                <div class="form-group">
                                    @Html.LabelFor(modelItem => Model.Activities[i].Timeslots[j].Tickets[k].Type, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="">
                                        @Html.EnumDropDownListFor(modelItem => Model.Activities[i].Timeslots[j].Tickets[k].Type, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(modelItem => Model.Activities[i].Timeslots[j].Tickets[k].Type, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                            <div class="form-group">
                                                @Html.LabelFor(modelItem => Model.Activities[i].Timeslots[j].Tickets[k].Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="">
                                                    @Html.EditorFor(modelItem => Model.Activities[i].Timeslots[j].Tickets[k].Price, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(modelItem => Model.Activities[i].Timeslots[j].Tickets[k].Price, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                            }
                        }
                    </section>
                    @for (int j = 0; j < Model.Activities[i].ActivityDescriptions.Count; j++)
                    {
                        <section class="col-md-6">
                            @Html.HiddenFor(model => Model.Activities[i].ActivityDescriptions[j].Activity_ID)
                            @Html.HiddenFor(model => Model.Activities[i].ActivityDescriptions[j].Section)
                            @Html.HiddenFor(model => Model.Activities[i].ActivityDescriptions[j].Language)

                            @Html.HiddenFor(model => Model.Activities[i].ActivityDescriptions[j].ImageUrl)
                            <img src=@Model.Activities[i].ActivityDescriptions[j].ImageUrl class="editImage" alt=@Model.Activities[i].ActivityDescriptions[j].Title id=@Html.Raw("Activities_"+i+"__ActivityDescriptions_"+j+"__ImageUrl") />
                            <input class='imgUpload' type='file' name='afbeelding' id=@Html.Raw("Activities_"+ i +"__ActivityDescriptions_"+j+"__ImageUrl")>
                            <div class="form-group">
                                @Html.LabelFor(modelItem => Model.Activities[i].ActivityDescriptions[j].Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="">
                                    @Html.EditorFor(modelItem => Model.Activities[i].ActivityDescriptions[j].Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(modelItem => Model.Activities[i].ActivityDescriptions[j].Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(modelItem => Model.Activities[i].ActivityDescriptions[j].DescriptionText, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="">
                                    @Html.EditorFor(modelItem => Model.Activities[i].ActivityDescriptions[j].DescriptionText, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(modelItem => Model.Activities[i].ActivityDescriptions[j].DescriptionText, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </section>
                    }
                </div>
            }
        </section>
    }
</main>