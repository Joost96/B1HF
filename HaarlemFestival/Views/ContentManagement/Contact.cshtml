@model HaarlemFestival.Model.Page
@section AddToHead{
    <link href=@Url.Content("~/Content/Admin.css") rel="stylesheet" type="text/css" />

}
@section AddToScripts{
    <script src=@Url.Content("~/Scripts/Admin.js")></script>
}
@{
    ViewBag.Title = "Contact";
}
@RenderPage("AdminNav.cshtml")
<main class="col-sm-9 ml-sm-auto col-md-10 adminMain">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Name)
        <section class="adminSection col-md-10">
            <div class="form-group">
                @Html.LabelFor(Model => Model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.EditorFor(Model => Model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(Model => Model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
        </section>
        <section class="adminSection col-md-10">
            @for (var i = 0; i < 2; i++)
            {

                <div class="form-group">
                    @Html.LabelFor(Model => Model.PageDescriptions[i].Title, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(Model => Model.PageDescriptions[i].Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(Model => Model.PageDescriptions[i].Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => Model.PageDescriptions[i].DescriptionText, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(modelItem => Model.PageDescriptions[i].DescriptionText, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(modelItem => Model.PageDescriptions[i].DescriptionText, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        </section>

        <section class="adminSection col-md-10">


            <div class="form-group">
                @Html.LabelFor(Model => Model.PageDescriptions[2].Title, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(Model => Model.PageDescriptions[2].Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(Model => Model.PageDescriptions[2].Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(modelItem => Model.PageDescriptions[2].DescriptionText, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(modelItem => Model.PageDescriptions[2].DescriptionText, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(modelItem => Model.PageDescriptions[2].DescriptionText, "", new { @class = "text-danger" })
                </div>
            </div>

            @for (var i = 3; i < Model.PageDescriptions.Count; i++)
            {

                <div class="form-group">
                    @Html.LabelFor(Model => Model.PageDescriptions[i].Title, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(Model => Model.PageDescriptions[i].Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(Model => Model.PageDescriptions[i].Title, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        </section>
    }
</main>

